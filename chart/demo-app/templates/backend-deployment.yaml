{{- $relname := .Release.Name -}}
{{- with .Values.backend }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "collective-ams.fullname" $ }}-backend
  labels:
    {{- include "collective-ams.labels" $ | nindent 4 }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      {{- include "collective-ams.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "collective-ams.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ $.Values.imagePullSecret }}
      serviceAccountName: {{ include "collective-ams.serviceAccountName" $ }}
      containers:
        - name: {{ $.Chart.Name }}-backend
          image: "{{ $.Values.repository }}/{{ .image.name }}:{{ .image.tag }}"
          env: 
          - name: UNIFI_BASEURL
            value: {{ .env.UNIFI_BASEURL }}
          - name: UNIFI_USER
            value: {{ .env.UNIFI_USER }}
          - name: UNIFI_PASSWORD
            value: {{ .env.UNIFI_PASSWORD }}
          - name: UNIFI_FRONTEND
            value: {{ .env.UNIFI_FRONTEND }}
          - name: FRIENDS_FRONTEND
            value: {{ .env.FRIENDS_FRONTEND }}
          - name: TICKET_FRONTEND
            value: {{ .env.TICKET_FRONTEND }}
          - name: DATABASE_ADAPTER
            value: {{ .env.DATABASE_ADAPTER | default "prisma_postgresql" }} 
          - name: DATABASE_URL
            value: {{ .env.DATABASE_URL }}
          - name: SESSION_SECRET
            value: {{ .env.SESSION_SECRET }}
          - name: STRIPE_SECRET
            value: {{ .env.STRIPE_SECRET }}
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
{{- end}}